{"version":3,"file":"component---themes-gatsby-theme-emma-core-src-templates-project-query-tsx-d41c81fa1a077077ab6e.js","mappings":"iOAgCA,EAxBwB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACtB,QAAC,KAAD,CACEC,GAAI,CACFC,cAAe,SACf,uBAAwB,CACtBC,GAAI,GAENC,GAAI,KAGN,eACEH,GAAI,CACFI,cAAe,YACfC,MAAO,UACPC,cAAe,QACfC,WAAY,aAGbT,IAEH,eAAKE,GAAI,CAAEQ,SAAU,IAAMT,KCR/B,EARoB,SAAC,GAAD,IAAGU,EAAH,EAAGA,QAAH,OAClB,QAAC,KAAD,CAAMT,GAAI,CAAEU,GAAI,EAAGP,GAAI,CAAC,EAAG,GAAIQ,SAAU,UACvC,QAAC,EAAD,CAAMb,KAAK,SAASC,QAASU,EAAQG,UACrC,QAAC,EAAD,CAAMd,KAAK,OAAOC,QAASU,EAAQI,QACnC,QAAC,EAAD,CAAMf,KAAK,UAAUC,QAASU,EAAQK,YCyE1C,EAvDgB,SAAC,GAAwC,IAA9BL,EAA8B,EAAtCM,KAAQN,QACnBO,GAAaC,EAAAA,EAAAA,WAAU,CAC3BC,OAAQA,EAAAA,OAAAA,KACRC,KAAM,CAAEC,QAAS,EAAGC,UAAW,4BAC/BC,GAAI,CAAEF,QAAS,EAAGC,UAAW,0BAEzBE,GAAYN,EAAAA,EAAAA,WAAU,CAAEC,OAAQA,EAAAA,OAAAA,KAAaM,MAAO,IAAKL,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAC9FK,GAAeR,EAAAA,EAAAA,WAAU,CAAEC,OAAQA,EAAAA,OAAAA,KAAaM,MAAO,IAAML,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAExG,OACE,QAAC,IAAD,MACE,QAAC,IAAD,CACEM,MAAOjB,EAAQiB,MACfC,YAAalB,EAAQmB,QACrBC,SAAUpB,EAAQqB,KAClBC,MAAOtB,EAAQuB,MAAMC,gBAAgBC,OAAQC,MAE7C,gBAAMrC,KAAK,iBAAiBsC,MAAM,YAClC,gBAAMtC,KAAK,iBAAiBsC,MAAM,UAClC,gBAAMtC,KAAK,gBAAgBsC,MAAO3B,EAAQG,UAC1C,gBAAMd,KAAK,gBAAgBsC,MAAO3B,EAAQI,SAE5C,QAAC,IAAD,CAAMkB,MAAOtB,EAAQuB,MAAMC,gBAAgBI,gBAAiBhC,MAAOI,EAAQJ,QACzE,QAAC,KAAD,CACEL,GAAI,CACFsC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,SAAU,MACVC,OAAQ,SACRC,QAAS,EACTC,OAAQ,EACR5C,cAAe,YAGjB,QAAC,EAAA6C,SAAA,IAAD,CAAcC,MAAO/B,IACnB,QAAC,KAAD,CAASgC,GAAG,KAAKC,QAAQ,aACtBxC,EAAQiB,SAGb,QAAC,EAAAoB,SAAA,IAAD,CAAcC,MAAOxB,IACnB,QAAC,EAAD,CAAad,QAASA,QAI5B,QAAC,KAAD,MACE,QAAC,EAAAqC,SAAA,IAAD,CAAcC,MAAOtB,IACnB,QAAC,EAAAyB,YAAD,KAAczC,EAAQ0C,UC/EhC,MCQe,YAA8C,IAAhBC,EAAgB,oBAC3D,OAAO,gBAAC,EAAYA","sources":["webpack://emma/../../themes/gatsby-theme-emma/src/components/project-info-item.tsx","webpack://emma/../../themes/gatsby-theme-emma/src/components/project-info.tsx","webpack://emma/../../themes/gatsby-theme-emma/src/components/project.tsx","webpack://emma/../../themes/gatsby-theme-emma-core/src/templates/project-query.tsx","webpack://emma/../../themes/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/project.tsx"],"sourcesContent":["/** @jsx jsx */\r\nimport { Flex, jsx } from \"theme-ui\"\r\n\r\ntype ProjectInfoItemProps = {\r\n  name: string\r\n  content: string\r\n}\r\n\r\nconst ProjectInfoItem = ({ name, content }: ProjectInfoItemProps) => (\r\n  <Flex\r\n    sx={{\r\n      flexDirection: `column`,\r\n      \"&:not(:last-of-type)\": {\r\n        mr: 5,\r\n      },\r\n      mb: 2,\r\n    }}\r\n  >\r\n    <div\r\n      sx={{\r\n        textTransform: `uppercase`,\r\n        color: `primary`,\r\n        letterSpacing: `wider`,\r\n        fontWeight: `semibold`,\r\n      }}\r\n    >\r\n      {name}\r\n    </div>\r\n    <div sx={{ fontSize: 2 }}>{content}</div>\r\n  </Flex>\r\n)\r\n\r\nexport default ProjectInfoItem\r\n","/** @jsx jsx */\r\nimport { Flex, jsx } from \"theme-ui\"\r\nimport Item from \"./project-info-item\"\r\n\r\ntype ProjectInfoProps = {\r\n  project: {\r\n    client: string\r\n    date: string\r\n    service: string\r\n  }\r\n}\r\n\r\nconst ProjectInfo = ({ project }: ProjectInfoProps) => (\r\n  <Flex sx={{ mt: 4, mb: [2, 4], flexWrap: `wrap` }}>\r\n    <Item name=\"Client\" content={project.client} />\r\n    <Item name=\"Date\" content={project.date} />\r\n    <Item name=\"Service\" content={project.service} />\r\n  </Flex>\r\n)\r\n\r\nexport default ProjectInfo\r\n","/** @jsx jsx */\r\nimport { animated, useSpring, config } from \"react-spring\"\r\nimport { Container, jsx, Flex, Heading } from \"theme-ui\"\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\r\nimport Layout from \"./layout\"\r\nimport SEO from \"./seo\"\r\nimport Hero from \"./hero\"\r\nimport ProjectInfo from \"./project-info\"\r\n\r\ntype ProjectProps = {\r\n  data: {\r\n    project: {\r\n      body: string\r\n      excerpt: string\r\n      client: string\r\n      color: string\r\n      date: string\r\n      service: string\r\n      slug: string\r\n      title: string\r\n      cover: {\r\n        childImageSharp: {\r\n          gatsbyImageData: IGatsbyImageData\r\n          resize: {\r\n            src: string\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  [key: string]: any\r\n}\r\n\r\nconst Project = ({ data: { project } }: ProjectProps) => {\r\n  const titleProps = useSpring({\r\n    config: config.slow,\r\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\r\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\r\n  })\r\n  const infoProps = useSpring({ config: config.slow, delay: 500, from: { opacity: 0 }, to: { opacity: 1 } })\r\n  const contentProps = useSpring({ config: config.slow, delay: 1000, from: { opacity: 0 }, to: { opacity: 1 } })\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={project.title}\r\n        description={project.excerpt}\r\n        pathname={project.slug}\r\n        image={project.cover.childImageSharp.resize!.src}\r\n      >\r\n        <meta name=\"twitter:label1\" value=\"Client\" />\r\n        <meta name=\"twitter:label2\" value=\"Date\" />\r\n        <meta name=\"twitter:data1\" value={project.client} />\r\n        <meta name=\"twitter:data2\" value={project.date} />\r\n      </SEO>\r\n      <Hero image={project.cover.childImageSharp.gatsbyImageData} color={project.color}>\r\n        <Flex\r\n          sx={{\r\n            position: `absolute`,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            maxWidth: `5xl`,\r\n            margin: `0 auto`,\r\n            padding: 4,\r\n            zIndex: 2,\r\n            flexDirection: `column`,\r\n          }}\r\n        >\r\n          <animated.div style={titleProps}>\r\n            <Heading as=\"h1\" variant=\"styles.h1\">\r\n              {project.title}\r\n            </Heading>\r\n          </animated.div>\r\n          <animated.div style={infoProps}>\r\n            <ProjectInfo project={project} />\r\n          </animated.div>\r\n        </Flex>\r\n      </Hero>\r\n      <Container>\r\n        <animated.div style={contentProps}>\r\n          <MDXRenderer>{project.body}</MDXRenderer>\r\n        </animated.div>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Project\r\n","import { graphql } from \"gatsby\"\r\nimport ProjectComponent from \"../components/project\"\r\n\r\nexport default ProjectComponent\r\n\r\nexport const query = graphql`\r\n  query ($slug: String!, $formatString: String!) {\r\n    project(slug: { eq: $slug }) {\r\n      body\r\n      excerpt\r\n      client\r\n      color\r\n      date(formatString: $formatString)\r\n      service\r\n      slug\r\n      title\r\n      cover {\r\n        childImageSharp {\r\n          gatsbyImageData(quality: 90, layout: FULL_WIDTH)\r\n          resize(width: 800) {\r\n            src\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport Project from \"../../../components/project\"\r\n\r\ntype Props = {\r\n  data: {\r\n    project: any\r\n    [key: string]: any\r\n  }\r\n  [key: string]: any\r\n}\r\n\r\nexport default function EmmaCoreProject({ ...props }: Props) {\r\n  return <Project {...props} />\r\n}\r\n"],"names":["name","content","sx","flexDirection","mr","mb","textTransform","color","letterSpacing","fontWeight","fontSize","project","mt","flexWrap","client","date","service","data","titleProps","useSpring","config","from","opacity","transform","to","infoProps","delay","contentProps","title","description","excerpt","pathname","slug","image","cover","childImageSharp","resize","src","value","gatsbyImageData","position","bottom","left","right","maxWidth","margin","padding","zIndex","animated","style","as","variant","MDXRenderer","body","props"],"sourceRoot":""}