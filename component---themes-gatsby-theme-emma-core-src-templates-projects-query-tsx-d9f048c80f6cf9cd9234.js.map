{"version":3,"file":"component---themes-gatsby-theme-emma-core-src-templates-projects-query-tsx-d9f048c80f6cf9cd9234.js","mappings":"kOAkGA,EA3EoB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAhB,OAClB,QAAC,EAAAC,SAAA,IAAD,CACEC,GAAI,CACFC,SAAU,WACV,WAAY,CACVC,QAAS,KACTC,QAAS,QACTC,WAAY,SAGhBP,MAAOA,IAEP,eACEG,GAAI,CACFK,KAAM,EACNC,OAAQ,OACRL,SAAU,WACVM,IAAK,EACLC,MAAO,OACPC,EAAG,CACDC,MAAO,QACPJ,OAAQ,OACRD,KAAM,EACNM,QAAS,EACTC,QAAS,EACTX,SAAU,WACVM,IAAK,EACLC,MAAO,OACPK,OAAQ,GACRC,WAAY,uBACZC,eAAgB,OAChB,UAAW,CACTL,MAAO,QACPC,QAAS,EACTI,eAAgB,YAKtB,eACEf,GAAI,CAEF,QAAS,CACPM,OAAQ,OACRD,KAAM,EACNJ,SAAU,sBACVM,IAAK,EACLC,MAAO,OACP,QAAS,CACPP,SAAU,yBAKhB,QAAC,EAAAe,EAAD,CAAaC,QAASnB,EAAQ,QAAH,OAAqBoB,MAAOtB,EAAKuB,MAAMC,gBAAgBC,gBAAiBC,IAAI,OAEzG,QAAC,EAAAC,KAAD,CAAMC,GAAI5B,EAAK6B,KAAM,oCAAmC7B,EAAK8B,QAC3D,eACE1B,GAAI,CACF2B,gBAAiB/B,EAAKc,MACtBJ,OAAQ,OACRD,KAAM,EACNJ,SAAU,WACVM,IAAK,EACLC,MAAO,OACPK,QAAS,MAGb,eAAKb,GAAI,CAAE4B,SAAU,EAAGC,WAAY,SAAWjC,EAAKkC,SACpD,eAAK9B,GAAI,CAAE4B,SAAU,IAAMhC,EAAKmC,aCdxC,EAvDiB,SAAC,GAAgC,IAA9BC,EAA8B,EAA9BA,SACZC,GAAQC,EAAAA,EAAAA,UAASF,EAASG,OAAQ,CACtCC,KAAM,CAAE9B,OAAQ,MAChBkB,GAAI,CAAElB,OAAQ,UAGhB,OAAwB,IAApB0B,EAASG,QAET,QAAC,IAAD,MACE,QAAC,KAAD,MACE,QAAC,OAAD,gBAEE,gBAAME,KAAK,MAAM,aAAW,cAA5B,MAFF,KAME,mBANF,qBAOmB,gDAPnB,sDAQE,6BARF,oFASE,QAAC,OAAD,CAAUC,KAAK,gFAAf,UATF,oCAeA,QAAC,OAAD,MACE,2BADF,KACgB,mBADhB,iDAE+C,wCAF/C,sDAGoB,+BAHpB,mBAGuD,iCAHvD,kFAKE,QAAC,OAAD,CAAUA,KAAK,gFAAf,UALF,QAgBN,QAAC,IAAD,CACEtC,GAAI,CACFG,QAAS,OACToC,oBAAqB,uCACrB/B,MAAO,SAGRyB,EAAMO,KAAI,SAAC3C,EAAO4C,GAAR,OACT,QAAC,EAAD,CAAa5C,MAAOA,EAAOC,MAAiB,IAAV2C,EAAa7C,KAAMoC,EAASS,GAAQC,IAAKV,EAASS,GAAOhB,YCrEnG,MCQe,YAA+C,IAAhBkB,EAAgB,oBAElDC,EACND,EADFE,KAAQD,WAGV,OAAO,gBAAC,EAAD,eAAUZ,SAAUY,EAAWE,OAAWH","sources":["webpack://emma/../../themes/gatsby-theme-emma/src/components/project-item.tsx","webpack://emma/../../themes/gatsby-theme-emma/src/components/projects.tsx","webpack://emma/../../themes/gatsby-theme-emma-core/src/templates/projects-query.tsx","webpack://emma/../../themes/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/projects.tsx"],"sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport { animated } from \"react-spring\"\r\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\r\n\r\ntype ProjectItemProps = {\r\n  node: {\r\n    color: string\r\n    title: string\r\n    slug: string\r\n    service: string\r\n    client: string\r\n    cover: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n    }\r\n  }\r\n  style: any\r\n  eager?: boolean\r\n}\r\n\r\nconst ProjectItem = ({ node, style, eager }: ProjectItemProps) => (\r\n  <animated.div\r\n    sx={{\r\n      position: `relative`,\r\n      \"&:before\": {\r\n        content: `\"\"`,\r\n        display: `block`,\r\n        paddingTop: `100%`,\r\n      },\r\n    }}\r\n    style={style}\r\n  >\r\n    <div\r\n      sx={{\r\n        left: 0,\r\n        height: `100%`,\r\n        position: `absolute`,\r\n        top: 0,\r\n        width: `100%`,\r\n        a: {\r\n          color: `white`,\r\n          height: `100%`,\r\n          left: 0,\r\n          opacity: 0,\r\n          padding: 4,\r\n          position: `absolute`,\r\n          top: 0,\r\n          width: `100%`,\r\n          zIndex: 10,\r\n          transition: `all 0.3s ease-in-out`,\r\n          textDecoration: `none`,\r\n          \"&:hover\": {\r\n            color: `white`,\r\n            opacity: 1,\r\n            textDecoration: `none`,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <div\r\n        sx={{\r\n          // @ts-ignore\r\n          \"> div\": {\r\n            height: `100%`,\r\n            left: 0,\r\n            position: `absolute !important`,\r\n            top: 0,\r\n            width: `100%`,\r\n            \"> div\": {\r\n              position: `static !important`,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <GatsbyImage loading={eager ? `eager` : `lazy`} image={node.cover.childImageSharp.gatsbyImageData} alt=\"\" />\r\n      </div>\r\n      <Link to={node.slug} aria-label={`View detail page of ${node.title}`}>\r\n        <div\r\n          sx={{\r\n            backgroundColor: node.color,\r\n            height: `100%`,\r\n            left: 0,\r\n            position: `absolute`,\r\n            top: 0,\r\n            width: `100%`,\r\n            zIndex: -2,\r\n          }}\r\n        />\r\n        <div sx={{ fontSize: 5, fontWeight: `bold` }}>{node.client}</div>\r\n        <div sx={{ fontSize: 2 }}>{node.service}</div>\r\n      </Link>\r\n    </div>\r\n  </animated.div>\r\n)\r\n\r\nexport default ProjectItem\r\n","/** @jsx jsx */\r\nimport { jsx, Container, Themed } from \"theme-ui\"\r\nimport { useTrail } from \"react-spring\"\r\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\r\nimport Layout from \"./layout\"\r\nimport ProjectItem from \"./project-item\"\r\n\r\ntype ProjectsProps = {\r\n  projects: {\r\n    color: string\r\n    slug: string\r\n    title: string\r\n    service: string\r\n    client: string\r\n    cover: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n    }\r\n  }[]\r\n  [key: string]: any\r\n}\r\n\r\nconst Projects = ({ projects }: ProjectsProps) => {\r\n  const trail = useTrail(projects.length, {\r\n    from: { height: `0%` },\r\n    to: { height: `100%` },\r\n  })\r\n\r\n  if (projects.length === 0) {\r\n    return (\r\n      <Layout>\r\n        <Container>\r\n          <Themed.p>\r\n            Hi!{` `}\r\n            <span role=\"img\" aria-label=\"Wave emoji\">\r\n              ðŸ‘‹\r\n            </span>\r\n            {` `}\r\n            <br />\r\n            Thanks for using <b>@lekoarts/gatsby-theme-emma</b>. You currently don't have any content in your{` `}\r\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\r\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emma\">\r\n              README\r\n            </Themed.a>\r\n            {` `}\r\n            to learn how to setup them.\r\n          </Themed.p>\r\n          <Themed.p>\r\n            <b>TL;DR:</b> <br />\r\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\r\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\r\n            Edit the frontmatter like described in the{` `}\r\n            <Themed.a href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-emma\">\r\n              README\r\n            </Themed.a>\r\n            .\r\n          </Themed.p>\r\n        </Container>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      sx={{\r\n        display: `grid`,\r\n        gridTemplateColumns: `repeat(auto-fit, minmax(280px, 1fr))`,\r\n        width: `100%`,\r\n      }}\r\n    >\r\n      {trail.map((style, index) => (\r\n        <ProjectItem style={style} eager={index === 0} node={projects[index]} key={projects[index].slug} />\r\n      ))}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import { graphql } from \"gatsby\"\r\nimport ProjectsComponent from \"../components/projects\"\r\n\r\nexport default ProjectsComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allProject(sort: { fields: date, order: DESC }) {\r\n      nodes {\r\n        color\r\n        slug\r\n        service\r\n        client\r\n        title\r\n        cover {\r\n          childImageSharp {\r\n            gatsbyImageData(width: 850, quality: 90)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport Projects from \"../../../components/projects\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allProject: any\r\n    [key: string]: string\r\n  }\r\n  [key: string]: any\r\n}\r\n\r\nexport default function EmmaCoreProjects({ ...props }: Props) {\r\n  const {\r\n    data: { allProject },\r\n  } = props\r\n\r\n  return <Projects projects={allProject.nodes} {...props} />\r\n}\r\n"],"names":["node","style","eager","animated","sx","position","content","display","paddingTop","left","height","top","width","a","color","opacity","padding","zIndex","transition","textDecoration","G","loading","image","cover","childImageSharp","gatsbyImageData","alt","Link","to","slug","title","backgroundColor","fontSize","fontWeight","client","service","projects","trail","useTrail","length","from","role","href","gridTemplateColumns","map","index","key","props","allProject","data","nodes"],"sourceRoot":""}